name: Delta Deployment to Dev

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run Apex tests?"
        type: boolean
        default: true

jobs:
  delta-deploy:
    runs-on: ubuntu-latest

    container:
      image: salesforce/cli:latest-full

    env:
      TEST_FLAG: ${{ inputs.run_tests }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Configure Git safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Authenticate to Salesforce
        env:
          SFDX_URL: ${{ secrets.DEV_SFDX_URL }}
        run: |
          echo "${SFDX_URL}" > auth.txt
          sf org login sfdx-url -f auth.txt -a DevOrg -s
        shell: bash

      - name: Identify Changed Metadata
        run: |
          mkdir delta || true
          git fetch origin Dev
          git diff --name-only origin/Dev...HEAD > changed-files.txt || true
          echo "Changed files list:"
          cat changed-files.txt || echo "No changes detected."
        shell: bash

      - name: Exit if nothing changed
        run: |
          if [ ! -s changed-files.txt ]; then
            echo "No metadata changes found. Skipping deployment."
            exit 0
          fi
        shell: bash

      - name: Generate Delta Package.xml
        run: |
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > delta/package.xml
          echo "<Package xmlns=\"http://soap.sforce.com/2006/04/metadata\">" >> delta/package.xml

          while IFS= read -r file; do
            folder=$(dirname "$file")
            type=$(echo "$folder" | sed 's|force-app/main/default/||')
            name=$(basename "$file" | sed 's/\..*$//')

            echo "  <types>" >> delta/package.xml
            echo "    <members>${name}</members>" >> delta/package.xml
            echo "    <name>${type}</name>" >> delta/package.xml
            echo "  </types>" >> delta/package.xml
          done < changed-files.txt

          echo "  <version>61.0</version>" >> delta/package.xml
          echo "</Package>" >> delta/package.xml

          echo "Generated package.xml:"
          cat delta/package.xml
        shell: bash

      - name: Deploy Only Changed Metadata
        run: |
          if [ "${TEST_FLAG}" = "true" ]; then
            echo "Deploying with tests..."
            sf project deploy start -x delta/package.xml  -l RunLocalTests -w 60
          else
            echo "Deploying without tests..."
            sf project deploy start -x delta/package.xml -l NoTestRun -w 60
          fi
        shell: bash
